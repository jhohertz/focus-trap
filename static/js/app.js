webpackJsonp([1,0],[function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}var n=a(12),l=t(n),o=a(11),p=t(o),r=a(109),i=t(r),c=a(95),d=t(c),u=a(16),h=t(u),m=a(110),f=t(m),g=a(14),j=t(g),b=a(13),v=t(b);a(59),a(68),l.default.use(p.default),l.default.use(i.default),l.default.use(h.default),l.default.use(f.default),(0,v.default)(l.default),j.default.start(d.default,"#root")},,,,,,,,,,function(s,e){s.exports='<pre><code class="hljs sh">$ npm install wovue-focus-trap --save\n</code></pre> '},,,function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}function n(s){s.component("app-footer",o.default),s.component("app-table",r.default)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=n;var l=a(106),o=t(l),p=a(107),r=t(p)},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(12),l=t(n),o=a(11),p=t(o),r=a(15);l.default.use(p.default);var i=new p.default({hashbang:!0,history:!1,linkActiveClass:"is-active",transitionOnLoad:!0});i.map(r.routes),i.beforeEach(function(){window.scrollTo(0,0)}),e.default=i},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0}),e.routes=void 0;var n=a(104),l=t(n),o=a(103),p=t(o),r=a(105),i=t(r),c=a(102),d=t(c),u=a(100),h=t(u),m=a(99),f=t(m),g=a(101),j=t(g),b=a(97),v=t(b),y=a(98),k=t(y);e.routes={"/":{name:"Home",component:l.default,subRoutes:{"/":{name:"HomeDefaultPage",component:p.default},"/usage":{name:"HomeUsagePage",component:i.default},"/api":{name:"HomeApiPage",component:d.default}}},"/examples":{name:"Examples",component:h.default,subRoutes:{"/":{name:"ExamplesDefaultPage",component:f.default},"/primary":{name:"ExamplesPrimaryPage",component:j.default}}},"/docs-example":{name:"DocsExample",component:v.default},"/docs-markdown-example":{name:"DocsMarkdownExample",component:k.default}}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0}),e.FocusTrap=void 0;var n=a(108),l=t(n),o={},p={install:function(s){o=s,o.component("wv-focus-trap",l.default)}};"undefined"!=typeof window&&window.Vue&&window.Vue.component("wv-focus-trap",l.default),e.default=p,e.FocusTrap=l.default},function(s,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={props:[{name:"repoUser",type:String,required:!0},{name:"repoName",type:String,required:!0},{name:"background",type:String,default:function(){return"#151513"}},{name:"color",type:String,default:function(){return"#ffffff"}}],computed:{ghLink:function(){return"https://github.com/"+this.repoUser+"/"+this.repoName}}}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(94),l=t(n),o=a(96),p=t(o);e.default={name:"Root",components:{GhCorner:l.default,Sidebar:p.default}}},function(s,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(10),l=t(n);e.default={name:"DocsExamplePage",data:function(){return{snippet:l.default,table:[{name:"David",gender:"Male",code:"`0132`",status:!1},{name:"Other",gender:"Male",code:"`123`",status:""}]}}}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(71),l=t(n);e.default={name:"DocsMarkdownExamplePage",data:function(){return{docsMarkdownExample:l.default}}}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(70),l=t(n);e.default={name:"ExamplesDefaultPage",data:function(){return{active:!1,snippets:{defaultExample:l.default}}},methods:{onSubmit:function(){this.$wv.dialog.toggle("form")}}}},function(s,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"Examples"}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(75),l=t(n);e.default={name:"ExamplesPrimaryPage",data:function(){return{snippets:{primaryExample:l.default}}}}},function(s,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"HomePage",data:function(){return{tables:{events:[{name:"activated",type:"emitted",description:"Fired when the `FocusTrap` is activated."},{name:"deactivated",type:"emitted",description:"Fired when the `FocusTrap` is deactivated."},{name:"outside-click",type:"emitted",description:"Fired when prop `allowOutsideClick` is `true` and a click is performed outside the focus trap."}],props:[{name:"active",type:"`Boolean`",required:!1,default:"`true`",description:"By default, the `FocusTrap` activates when it mounts (ready hook). So you activate and deactivate it via mounting (render) and unmounting (destroyed). If, however, you want to keep the `FocusTrap` mounted while still toggling its activation state, you can do that with this prop."},{name:"paused",type:"`Boolean`",required:!1,default:"`false`",description:'If you would like to pause or unpause the focus trap (see [focus-trap"s documentation](https://github.com/davidtheclark/focus-trap#focustrappause)), toggle this prop.'},{name:"initialFocus",type:"`Element|String`",required:!1,default:"`null`",description:'By default, when a focus trap is activated the first element in the focus trap"s tab order will receive focus. With this option you can specify a different element to receive that initial focus. Can be a DOM node or a selector string (which will be passed to `document.querySelector()` to find the DOM node).'},{name:"deactivateOnEsc",type:"`Boolean`",required:!1,default:"`true`",description:"If `false`, the `Escape` key will not trigger deactivation of the focus trap. This can be useful if you want to force the user to make a decision instead of allowing an easy way out."},{name:"deactivateOnOutsideClick",type:"`Boolean`",required:!1,default:"`false`",description:"If `true`, a click outside the focus trap will deactivate the focus trap and allow the click event to do its thing."},{name:"returnFocusOnDeactivate",type:"`Boolean`",required:!1,default:"`true`",description:"If `false`, when the trap is deactivated, focus will not return to the element that had focus before activation."},{name:"allowOutsideClick",type:"`Function`",required:!1,default:"`null`",description:"If set to a `Function`, clicking outside the focus trap will execute this function. If the function returns true, the focus trap will allow the click to execute, otherwise it will not."}]}}}}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(10),l=t(n),o=a(74),p=t(o),r=a(73),i=t(r),c=a(72),d=t(c);e.default={name:"HomeDefaultPage",data:function(){return{snippets:{installationInclude:p.default,installation:l.default,installationCommonjs:i.default,installationCommonjsAlternative:d.default}}}}},function(s,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={name:"HomePage"}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(76),l=t(n);e.default={name:"HomeUsagePage",data:function(){return{isTrap1Visible:!1,isTrap1Active:!0,snippets:{basic:l.default}}},methods:{mountTrap1:function(){this.isTrap1Visible=!0},toggleTrap1:function(){this.isTrap1Active=!this.isTrap1Active}}}},function(s,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(32),l=t(n),o=a(77),p=t(o);e.default={data:function(){return{empty:'â€”<span class="o-screen-reader">none</span>'}},props:[{name:"data",type:Array,required:!0}],computed:{columns:function(){return this.data.length?(0,l.default)(this.data[0]):[]}},methods:{marked:function(s){return(0,p.default)(s)}}}},function(s,e,a){"use strict";function t(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(69),l=t(n);e.default={props:{active:{type:Boolean,default:!0},paused:{type:Boolean,default:!1},initialFocus:{default:null},deactivateOnEsc:{type:Boolean,default:!0},deactivateOnOutsideClick:{type:Boolean,default:!1},returnFocusOnDeactivate:{type:Boolean,default:!0},allowOutsideClick:{type:Function,default:null}},data:function(){return{focusTrap:null}},mounted:function(){this.initFocusTrap()},beforeDestroy:function(){this.focusTrap.deactivate()},methods:{initFocusTrap:function(){this.setFocusTrap(),this.active&&this.focusTrap.activate(),this.paused&&this.focusTrap.pause()},setFocusTrap:function(){this.$set(this,"focusTrap",(0,l.default)(this.$el,{onActivate:this.onActivate,onDeactivate:this.onDeactivate,initialFocus:this.initialFocus,escapeDeactivates:this.deactivateOnEsc,clickOutsideDeactivates:this.deactivateOnOutsideClick,returnFocusOnDeactivate:this.returnFocusOnDeactivate,allowOutsideClick:this.allowOutsideClick}))},onActivate:function(){this.$emit("activated")},onDeactivate:function(){this.$emit("deactivated")}},watch:{active:function(s,e){e&&!s?this.focusTrap.deactivate():!e&&s&&this.focusTrap.activate()},paused:function(s,e){e&&!s?this.focusTrap.unpause():!e&&s&&this.focusTrap.pause()}}}},,,,,,,,,,,,,,,,,,,,,,,,,,,,function(s,e){},function(s,e){},function(s,e){},function(s,e){},function(s,e){},function(s,e){},function(s,e){},function(s,e){},function(s,e){},function(s,e){},,function(s,e){s.exports='<pre><code class="hljs html"><span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>v-dialog:toggle</span>=<span class=hljs-string>"form-modal"</span>&gt;</span>Open A11Y Dialog<span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>wv-dialog</span>\n  <span class=hljs-attr>class</span>=<span class=hljs-string>"form-dialog"</span>\n  @<span class=hljs-attr>closed</span>=<span class=hljs-string>"active = false"</span>\n  @<span class=hljs-attr>opened</span>=<span class=hljs-string>"active = true"</span>\n  <span class=hljs-attr>ref</span>=<span class=hljs-string>"form-modal"</span>\n  <span class=hljs-attr>aria-labelledby</span>=<span class=hljs-string>"modal-title"</span>\n&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>wv-focus-trap</span>\n    <span class=hljs-attr>class</span>=<span class=hljs-string>"form-dialog__content"</span>\n    <span class=hljs-attr>:active</span>=<span class=hljs-string>"active"</span>\n    <span class=hljs-attr>:deactivate-on-outside-click</span>=<span class=hljs-string>"true"</span>\n  &gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>h1</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"modal-title"</span>&gt;</span>Modal title<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>form</span> @<span class=hljs-attr>submit.prevent</span>=<span class=hljs-string>"onSubmit"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>label</span>&gt;</span>Name: <span class=hljs-tag>&lt;<span class=hljs-name>input</span> <span class=hljs-attr>required</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"text"</span> <span class=hljs-attr>placeholder</span>=<span class=hljs-string>"Give me your name"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>label</span>&gt;</span>Email:<span class=hljs-tag>&lt;<span class=hljs-name>input</span> <span class=hljs-attr>required</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"email"</span> <span class=hljs-attr>placeholder</span>=<span class=hljs-string>"Give me your email"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>label</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"submit"</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"button"</span>&gt;</span>Submit<span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>form</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>wv-focus-trap</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>wv-dialog</span>&gt;</span>\n</code></pre> <pre><code class="hljs js"><span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n  data () {\n    <span class=hljs-keyword>return</span> {\n      <span class=hljs-attr>active</span>: <span class=hljs-literal>false</span>\n    }\n  },\n  <span class=hljs-attr>methods</span>: {\n    onSubmit () {\n      <span class=hljs-keyword>this</span>.$wv.dialog.toggle(<span class=hljs-string>\'form\'</span>)\n    }\n  }\n}\n</code></pre> '},function(s,e){s.exports='<h1 id=create-pages-using-markdown>Create pages using markdown</h1> <p>Just create a new component in <code>pages</code> folder, and import your markdown file, it will be pre-processed by <a href=https://www.npmjs.com/package/markdown-loader>markdown loader</a> and <a href=https://github.com/webpack/html-loader>html loader</a>.</p> <pre><code class="hljs vue">&lt;template&gt;\n  &lt;main class="c-main"&gt;\n    &lt;!-- insert plain HTML data --&gt;\n    &lt;article class="markdown-body c-markdown-body u-gutter" v-html="docsMarkdownExample"&gt;&lt;/article&gt;\n    &lt;app-footer&gt;&lt;/app-footer&gt;\n  &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n  // import markdown\n  import docsMarkdownExample from \'src-docs/app/snippets/docs-markdown-example.md\'\n\n  export default {\n    name: \'DocsMarkdownExamplePage\',\n    data () {\n      return {\n        docsMarkdownExample\n      }\n    }\n  }\n&lt;/script&gt;\n</code></pre> <p>That&#39;s it!</p> <h1 id=marked>marked</h1> <blockquote> <p>A full-featured markdown parser and compiler, written in JavaScript. Built for speed.</p> </blockquote> <p><a href=http://badge.fury.io/js/marked><img src=https://badge.fury.io/js/marked.png alt="NPM version"></a></p> <h2 id=install>Install</h2> <pre><code class="hljs bash">npm install marked --save\n</code></pre> <h2 id=usage>Usage</h2> <p>Minimal usage:</p> <pre><code class="hljs js"><span class=hljs-keyword>var</span> marked = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'marked\'</span>);\n<span class=hljs-built_in>console</span>.log(marked(<span class=hljs-string>\'I am using __markdown__.\'</span>));\n<span class=hljs-comment>// Outputs: &lt;p&gt;I am using &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;</span>\n</code></pre> <p>Example setting options with default values:</p> <pre><code class="hljs js"><span class=hljs-keyword>var</span> marked = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'marked\'</span>);\nmarked.setOptions({\n  <span class=hljs-attr>renderer</span>: <span class=hljs-keyword>new</span> marked.Renderer(),\n  <span class=hljs-attr>gfm</span>: <span class=hljs-literal>true</span>,\n  <span class=hljs-attr>tables</span>: <span class=hljs-literal>true</span>,\n  <span class=hljs-attr>breaks</span>: <span class=hljs-literal>false</span>,\n  <span class=hljs-attr>pedantic</span>: <span class=hljs-literal>false</span>,\n  <span class=hljs-attr>sanitize</span>: <span class=hljs-literal>false</span>,\n  <span class=hljs-attr>smartLists</span>: <span class=hljs-literal>true</span>,\n  <span class=hljs-attr>smartypants</span>: <span class=hljs-literal>false</span>\n});\n\n<span class=hljs-built_in>console</span>.log(marked(<span class=hljs-string>\'I am using __markdown__.\'</span>));\n</code></pre> <h3 id=browser>Browser</h3> <pre><code class="hljs html"><span class=hljs-meta>&lt;!doctype html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"utf-8"</span>/&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>Marked in the browser<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"lib/marked.js"</span>&gt;</span><span class="undefined"></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"content"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n    <span class=hljs-built_in>document</span>.getElementById(<span class=hljs-string>\'content\'</span>).innerHTML =\n      marked(<span class=hljs-string>\'# Marked in browser\\n\\nRendered by **marked**.\'</span>);\n  </span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre> <h2 id=marked-markdownstring-options-callback->marked(markdownString [,options] [,callback])</h2> <h3 id=markdownstring>markdownString</h3> <p>Type: <code>string</code></p> <p>String of markdown source to be compiled.</p> <h3 id=options>options</h3> <p>Type: <code>object</code></p> <p>Hash of options. Can also be set using the <code>marked.setOptions</code> method as seen above.</p> <h3 id=callback>callback</h3> <p>Type: <code>function</code></p> <p>Function called when the <code>markdownString</code> has been fully parsed when using async highlighting. If the <code>options</code> argument is omitted, this can be used as the second argument.</p> <h2 id=options>Options</h2> <h3 id=highlight>highlight</h3> <p>Type: <code>function</code></p> <p>A function to highlight code blocks. The first example below uses async highlighting with <a href=https://github.com/rvagg/node-pygmentize-bundled>node-pygmentize-bundled</a>, and the second is a synchronous example using <a href=https://github.com/isagalaev/highlight.js>highlight.js</a>:</p> <pre><code class="hljs js"><span class=hljs-keyword>var</span> marked = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'marked\'</span>);\n\n<span class=hljs-keyword>var</span> markdownString = <span class=hljs-string>\'```js\\n console.log("hello"); \\n```\'</span>;\n\n<span class=hljs-comment>// Async highlighting with pygmentize-bundled</span>\nmarked.setOptions({\n  <span class=hljs-attr>highlight</span>: <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>code, lang, callback</span>) </span>{\n    <span class=hljs-built_in>require</span>(<span class=hljs-string>\'pygmentize-bundled\'</span>)({ <span class=hljs-attr>lang</span>: lang, <span class=hljs-attr>format</span>: <span class=hljs-string>\'html\'</span> }, code, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>err, result</span>) </span>{\n      callback(err, result.toString());\n    });\n  }\n});\n\n<span class=hljs-comment>// Using async version of marked</span>\nmarked(markdownString, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>err, content</span>) </span>{\n  <span class=hljs-keyword>if</span> (err) <span class=hljs-keyword>throw</span> err;\n  <span class=hljs-built_in>console</span>.log(content);\n});\n\n<span class=hljs-comment>// Synchronous highlighting with highlight.js</span>\nmarked.setOptions({\n  <span class=hljs-attr>highlight</span>: <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>code</span>) </span>{\n    <span class=hljs-keyword>return</span> <span class=hljs-built_in>require</span>(<span class=hljs-string>\'highlight.js\'</span>).highlightAuto(code).value;\n  }\n});\n\n<span class=hljs-built_in>console</span>.log(marked(markdownString));\n</code></pre> <h4 id=highlight-arguments>highlight arguments</h4> <p><code>code</code></p> <p>Type: <code>string</code></p> <p>The section of code to pass to the highlighter.</p> <p><code>lang</code></p> <p>Type: <code>string</code></p> <p>The programming language specified in the code block.</p> <p><code>callback</code></p> <p>Type: <code>function</code></p> <p>The callback function to call when using an async highlighter.</p> <h3 id=renderer>renderer</h3> <p>Type: <code>object</code> Default: <code>new Renderer()</code></p> <p>An object containing functions to render tokens to HTML.</p> <h4 id=overriding-renderer-methods>Overriding renderer methods</h4> <p>The renderer option allows you to render tokens in a custom manner. Here is an example of overriding the default heading token rendering by adding an embedded anchor tag like on GitHub:</p> <pre><code class="hljs javascript"><span class=hljs-keyword>var</span> marked = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'marked\'</span>);\n<span class=hljs-keyword>var</span> renderer = <span class=hljs-keyword>new</span> marked.Renderer();\n\nrenderer.heading = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>text, level</span>) </span>{\n  <span class=hljs-keyword>var</span> escapedText = text.toLowerCase().replace(<span class=hljs-regexp>/[^\\w]+/g</span>, <span class=hljs-string>\'-\'</span>);\n\n  <span class=hljs-keyword>return</span> <span class=hljs-string>\'&lt;h\'</span> + level + <span class=hljs-string>\'&gt;&lt;a name="\'</span> +\n                escapedText +\n                 <span class=hljs-string>\'" class="anchor" href="#\'</span> +\n                 escapedText +\n                 <span class=hljs-string>\'"&gt;&lt;span class="header-link"&gt;&lt;/span&gt;&lt;/a&gt;\'</span> +\n                  text + <span class=hljs-string>\'&lt;/h\'</span> + level + <span class=hljs-string>\'&gt;\'</span>;\n},\n\n<span class=hljs-built_in>console</span>.log(marked(<span class=hljs-string>\'# heading+\'</span>, { <span class=hljs-attr>renderer</span>: renderer }));\n</code></pre> <p>This code will output the following HTML:</p> <pre><code class="hljs html"><span class=hljs-tag>&lt;<span class=hljs-name>h1</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"heading-"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"anchor"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"#heading-"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"header-link"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n  heading+\n<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n</code></pre> <h4 id=block-level-renderer-methods>Block level renderer methods</h4> <ul> <li>code(<em>string</em> code, <em>string</em> language)</li> <li>blockquote(<em>string</em> quote)</li> <li>html(<em>string</em> html)</li> <li>heading(<em>string</em> text, <em>number</em> level)</li> <li>hr()</li> <li>list(<em>string</em> body, <em>boolean</em> ordered)</li> <li>listitem(<em>string</em> text)</li> <li>paragraph(<em>string</em> text)</li> <li>table(<em>string</em> header, <em>string</em> body)</li> <li>tablerow(<em>string</em> content)</li> <li>tablecell(<em>string</em> content, <em>object</em> flags)</li> </ul> <p><code>flags</code> has the following properties:</p> <pre><code class="hljs js">{\n    <span class=hljs-attr>header</span>: <span class=hljs-literal>true</span> || <span class=hljs-literal>false</span>,\n    <span class=hljs-attr>align</span>: <span class=hljs-string>\'center\'</span> || <span class=hljs-string>\'left\'</span> || <span class=hljs-string>\'right\'</span>\n}\n</code></pre> <h4 id=inline-level-renderer-methods>Inline level renderer methods</h4> <ul> <li>strong(<em>string</em> text)</li> <li>em(<em>string</em> text)</li> <li>codespan(<em>string</em> code)</li> <li>br()</li> <li>del(<em>string</em> text)</li> <li>link(<em>string</em> href, <em>string</em> title, <em>string</em> text)</li> <li>image(<em>string</em> href, <em>string</em> title, <em>string</em> text)</li> </ul> <h3 id=gfm>gfm</h3> <p>Type: <code>boolean</code> Default: <code>true</code></p> <p>Enable <a href=https://help.github.com/articles/github-flavored-markdown>GitHub flavored markdown</a>.</p> <h3 id=tables>tables</h3> <p>Type: <code>boolean</code> Default: <code>true</code></p> <p>Enable GFM <a href=https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#wiki-tables>tables</a>. This option requires the <code>gfm</code> option to be true.</p> <h3 id=breaks>breaks</h3> <p>Type: <code>boolean</code> Default: <code>false</code></p> <p>Enable GFM <a href=https://help.github.com/articles/github-flavored-markdown#newlines>line breaks</a>. This option requires the <code>gfm</code> option to be true.</p> <h3 id=pedantic>pedantic</h3> <p>Type: <code>boolean</code> Default: <code>false</code></p> <p>Conform to obscure parts of <code>markdown.pl</code> as much as possible. Don&#39;t fix any of the original markdown bugs or poor behavior.</p> <h3 id=sanitize>sanitize</h3> <p>Type: <code>boolean</code> Default: <code>false</code></p> <p>Sanitize the output. Ignore any HTML that has been input.</p> <h3 id=smartlists>smartLists</h3> <p>Type: <code>boolean</code> Default: <code>true</code></p> <p>Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into <code>pedantic</code>.</p> <h3 id=smartypants>smartypants</h3> <p>Type: <code>boolean</code> Default: <code>false</code></p> <p>Use &quot;smart&quot; typograhic punctuation for things like quotes and dashes.</p> <h2 id=access-to-lexer-and-parser>Access to lexer and parser</h2> <p>You also have direct access to the lexer and parser if you so desire.</p> <pre><code class="hljs js"><span class=hljs-keyword>var</span> tokens = marked.lexer(text, options);\n<span class=hljs-built_in>console</span>.log(marked.parser(tokens));\n</code></pre> <pre><code class="hljs js"><span class=hljs-keyword>var</span> lexer = <span class=hljs-keyword>new</span> marked.Lexer(options);\n<span class=hljs-keyword>var</span> tokens = lexer.lex(text);\n<span class=hljs-built_in>console</span>.log(tokens);\n<span class=hljs-built_in>console</span>.log(lexer.rules);\n</code></pre> <h2 id=cli>CLI</h2> <pre><code class="hljs bash">$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n&lt;p&gt;hello world&lt;/p&gt;\n</code></pre> <h2 id=philosophy-behind-marked>Philosophy behind marked</h2> <p>The point of marked was to create a markdown compiler where it was possible to frequently parse huge chunks of markdown without having to worry about caching the compiled output somehow...or blocking for an unnecesarily long time.</p> <p>marked is very concise and still implements all markdown features. It is also now fully compatible with the client-side.</p> <p>marked more or less passes the official markdown test suite in its entirety. This is important because a surprising number of markdown compilers cannot pass more than a few tests. It was very difficult to get marked as compliant as it is. It could have cut corners in several areas for the sake of performance, but did not in order to be exactly what you expect in terms of a markdown rendering. In fact, this is why marked could be considered at a disadvantage in the benchmarks above.</p> <p>Along with implementing every markdown feature, marked also implements <a href=http://github.github.com/github-flavored-markdown/ >GFM features</a>.</p> <h2 id=benchmarks>Benchmarks</h2> <p>node v0.8.x</p> <pre><code class="hljs bash">$ node <span class=hljs-built_in>test</span> --bench\nmarked completed <span class=hljs-keyword>in</span> 3411ms.\nmarked (gfm) completed <span class=hljs-keyword>in</span> 3727ms.\nmarked (pedantic) completed <span class=hljs-keyword>in</span> 3201ms.\nrobotskirt completed <span class=hljs-keyword>in</span> 808ms.\nshowdown (reuse converter) completed <span class=hljs-keyword>in</span> 11954ms.\nshowdown (new converter) completed <span class=hljs-keyword>in</span> 17774ms.\nmarkdown-js completed <span class=hljs-keyword>in</span> 17191ms.\n</code></pre> <p><strong>Marked is now faster than Discount, which is written in C.</strong></p> <p>For those feeling skeptical: These benchmarks run the entire markdown test suite 1000 times. The test suite tests every feature. It doesn&#39;t cater to specific aspects.</p> <h3 id=pro-level>Pro level</h3> <p>You also have direct access to the lexer and parser if you so desire.</p> <pre><code class="hljs js"><span class=hljs-keyword>var</span> tokens = marked.lexer(text, options);\n<span class=hljs-built_in>console</span>.log(marked.parser(tokens));\n</code></pre> <pre><code class="hljs js"><span class=hljs-keyword>var</span> lexer = <span class=hljs-keyword>new</span> marked.Lexer(options);\n<span class=hljs-keyword>var</span> tokens = lexer.lex(text);\n<span class=hljs-built_in>console</span>.log(tokens);\n<span class=hljs-built_in>console</span>.log(lexer.rules);\n</code></pre> <pre><code class="hljs bash">$ node\n&gt; require(<span class=hljs-string>\'marked\'</span>).lexer(<span class=hljs-string>\'&gt; i am using marked.\'</span>)\n[ { <span class=hljs-built_in>type</span>: <span class=hljs-string>\'blockquote_start\'</span> },\n  { <span class=hljs-built_in>type</span>: <span class=hljs-string>\'paragraph\'</span>,\n    text: <span class=hljs-string>\'i am using marked.\'</span> },\n  { <span class=hljs-built_in>type</span>: <span class=hljs-string>\'blockquote_end\'</span> },\n  links: {} ]\n</code></pre> <h2 id=running-tests-contributing>Running Tests &amp; Contributing</h2> <p>If you want to submit a pull request, make sure your changes pass the test suite. If you&#39;re adding a new feature, be sure to add your own test.</p> <p>The marked test suite is set up slightly strangely: <code>test/new</code> is for all tests that are not part of the original markdown.pl test suite (this is where your test should go if you make one). <code>test/original</code> is only for the original markdown.pl tests. <code>test/tests</code> houses both types of tests after they have been combined and moved/generated by running <code>node test --fix</code> or <code>marked --test --fix</code>.</p> <p>In other words, if you have a test to add, add it to <code>test/new/</code> and then regenerate the tests with <code>node test --fix</code>. Commit the result. If your test uses a certain feature, for example, maybe it assumes GFM is <em>not</em> enabled, you can add <code>.nogfm</code> to the filename. So, <code>my-test.text</code> becomes <code>my-test.nogfm.text</code>. You can do this with any marked option. Say you want line breaks and smartypants enabled, your filename should be: <code>my-test.breaks.smartypants.text</code>.</p> <p>To run the tests:</p> <pre><code class="hljs bash"><span class=hljs-built_in>cd</span> marked/\nnode <span class=hljs-built_in>test</span>\n</code></pre> <h3 id=contribution-and-license-agreement>Contribution and License Agreement</h3> <p>If you contribute code to this project, you are implicitly allowing your code to be distributed under the MIT license. You are also implicitly verifying that all code is your original work. <code>&lt;/legalese&gt;</code></p> <h2 id=license>License</h2> <p>Copyright (c) 2011-2014, Christopher Jeffrey. (MIT License)</p> <p>See LICENSE for more info.</p> ';
},function(s,e){s.exports="<pre><code class=\"hljs js\"><span class=hljs-keyword>import</span> {FocusTrap} <span class=hljs-keyword>from</span> <span class=hljs-string>'wovue-focus-trap'</span>\n\n<span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n  <span class=hljs-comment>// ...</span>\n  components: {\n    FocusTrap\n  }\n  <span class=hljs-comment>// ...</span>\n}\n</code></pre> "},function(s,e){s.exports="<pre><code class=\"hljs js\"><span class=hljs-keyword>import</span> Vue <span class=hljs-keyword>from</span> <span class=hljs-string>'vue'</span>\n<span class=hljs-keyword>import</span> FocusTrap <span class=hljs-keyword>from</span> <span class=hljs-string>'wovue-focus-trap'</span>\n\nVue.use(FocusTrap)\n</code></pre> "},function(s,e){s.exports='<pre><code class="hljs html"><span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"path/to/vue.js"</span>&gt;</span><span class="undefined"></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"https://unpkg.com/wovue-focus-trap/dist/focus-trap.js"</span>&gt;</span><span class="undefined"></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"path/to/app.js"</span>&gt;</span><span class="undefined"></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n</code></pre> '},function(s,e){s.exports='<pre><code class="hljs html"><span class=hljs-tag>&lt;<span class=hljs-name>focus-trap</span> <span class=hljs-attr>modifier</span>=<span class=hljs-string>"primary"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>focus-trap</span>&gt;</span>\n</code></pre> '},function(s,e){s.exports='<pre><code class="hljs html"><span class=hljs-tag>&lt;<span class=hljs-name>button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"mountTrap"</span>&gt;</span>mount trap<span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>wv-focus-trap</span> <span class=hljs-attr>v-if</span>=<span class=hljs-string>"isTrapVisible"</span> <span class=hljs-attr>:active</span>=<span class=hljs-string>"isTrapActive"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>Here is a focus trap <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>\'#!\'</span>&gt;</span>with<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>\'#!\'</span>&gt;</span>some<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>\'#!\'</span>&gt;</span>focusable<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> parts.<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>button</span> @<span class=hljs-attr>click</span>=<span class=hljs-string>"toggleTrap"</span>&gt;</span>toggle trap<span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>wv-focus-trap</span>&gt;</span>\n</code></pre> <pre><code class="hljs js"><span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n  data () {\n    <span class=hljs-keyword>return</span> {\n      <span class=hljs-attr>isTrapVisible</span>: <span class=hljs-literal>false</span>,\n      <span class=hljs-attr>isTrapActive</span>: <span class=hljs-literal>true</span>\n    }\n  },\n  <span class=hljs-attr>methods</span>: {\n    mountTrap () {\n      <span class=hljs-keyword>this</span>.isTrapVisible = <span class=hljs-literal>true</span>\n    },\n    toggleTrap () {\n      <span class=hljs-keyword>this</span>.isTrapActive = !<span class=hljs-keyword>this</span>.isTrapActive\n    }\n  }\n}\n</code></pre> '},,,function(s,e){s.exports=' <a class=github-corner :href=ghLink target=_blank rel="noopener noreferrer" aria-label="View source on Github" title="View source on Github"> <svg width=80 height=80 viewBox="0 0 250 250" :style="{fill: background, color: color, position: \'absolute\', top: 0, border: 0, right: 0}" aria-hidden=true> <path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path> <path class=octo-arm d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill=currentColor style="transform-origin: 130px 106px"></path> <path class=octo-body d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill=currentColor></path> </svg> </a> '},function(s,e){s.exports=" <div> <sidebar></sidebar> <router-view></router-view> <gh-corner v-transfer-dom repo-user=wovue repo-name=focus-trap color=#EAE8EB background=#35495E></gh-corner> </div> "},function(s,e){s.exports=' <header class=c-sidebar> <h1 class=c-sidebar__header> <a href=#!>focus-trap</a> </h1> <nav class=c-sidebar__body role=navigation> <ul class=o-reset-list> <li class="c-sidebar__item c-sidebar__item--heading"> <a v-link="{name: \'Home\', exact: true}">Getting started</a> </li> <li> <ul class=o-reset-list> <li class="c-sidebar__item c-sidebar__item--sub-heading"> <a v-link="{name: \'HomeDefaultPage\', exact: true}">Installation</a> </li> <li class="c-sidebar__item c-sidebar__item--sub-heading"> <a v-link="{name: \'HomeUsagePage\'}">Usage</a> </li> <li class="c-sidebar__item c-sidebar__item--sub-heading"> <a v-link="{name: \'HomeApiPage\'}">Api</a> </li> </ul> </li> <li class="c-sidebar__item c-sidebar__item--heading"> <a v-link="{name: \'Examples\'}">Examples</a> </li> <li> <ul class=o-reset-list> <li class="c-sidebar__item c-sidebar__item--sub-heading"> <a v-link="{name: \'ExamplesDefaultPage\', exact: true}">A11Y Dialog</a> </li> </ul> </li> </ul> </nav> </header> '},function(s,e){s.exports=' <main class=c-main role=main> <section class=c-main__section> <h2 class="c-main__heading u-gutter">Main title</h2> <section class=c-main__sub-section> <h3 class="c-main__sub-heading u-gutter">Main sub title</h3> <div class="c-item u-gutter"> <h4 class=c-item__heading>Item title</h4> <div class=c-item__description> <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation</p> <p>Ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p> </div> <h5 class=c-item__sub-heading>Item sub title (code)</h5> <div class=c-item__code-wrapper v-html=snippet></div> <h5 class=c-item__sub-heading>Item sub title (table)</h5> <app-table class=c-item__table :data=table></app-table> </div> </section> </section> <app-footer></app-footer> </main> '},function(s,e){s.exports=' <main class=c-main> <article class="markdown-body c-markdown-body u-gutter" v-html=docsMarkdownExample></article> <app-footer></app-footer> </main> '},function(s,e){s.exports=' <section class=c-main__sub-section> <h3 class="c-main__sub-heading u-gutter">Default</h3> <div class="c-item u-gutter"> <h5 class=c-item__sub-heading>Code:</h5> <div class=c-item__code-wrapper v-html=snippets.defaultExample></div> <h5 class=c-item__sub-heading>Result:</h5> <div class=c-play-around> <button v-dialog:toggle=form-modal>Open A11Y Dialog</button> <wv-dialog class=form-dialog @closed="active = false" @opened="active = true" ref=form-modal aria-labelledby=modal-title> <wv-focus-trap class=form-dialog__content :active=active :deactivate-on-outside-click=true> <h1 id=modal-title>Modal title</h1> <form @submit.prevent=onSubmit> <label>Name: <input required type=text placeholder="Give me your name"></label> <label>Email:<input required type=email placeholder="Give me your email"></label> <button type=submit name=button>Submit</button> </form> </wv-focus-trap> </wv-dialog> </div> </div> </section> '},function(s,e){s.exports=' <main class=c-main role=main> <section class=c-main__section> <h2 class="c-main__heading u-gutter">Examples</h2> <router-view></router-view> </section> <app-footer></app-footer> </main> '},function(s,e){s.exports=' <section class=c-main__sub-section> <h3 class="c-main__sub-heading u-gutter">Primary</h3> <div class="c-item u-gutter"> <h5 class=c-item__sub-heading>Code:</h5> <div class=c-item__code-wrapper v-html=snippets.primaryExample></div> <h5 class=c-item__sub-heading>Result:</h5> <focus-trap modifier=primary></focus-trap> </div> </section> '},function(s,e){s.exports=' <section class=c-main__sub-section> <h3 class="c-main__sub-heading u-gutter">API</h3> <div class="c-item u-gutter"> <h4 class=c-item__heading>FocusTrap</h4> <h5 class=c-item__sub-heading>Props</h5> <app-table class=c-item__table :data=tables.props></app-table> <h5 class=c-item__sub-heading>Events</h5> <app-table class=c-item__table :data=tables.events></app-table> </div> </section> '},function(s,e){s.exports=' <section class=c-main__sub-section> <h3 class="c-main__sub-heading u-gutter">Installation</h3> <div class="c-item u-gutter"> <div class=c-item__description> <p>You have two ways to setup <code>wovue-focus-trap</code>:</p> </div> <h4 class=c-item__heading>NPM</h4> <div class=c-item__code-wrapper v-html=snippets.installation></div> <h5 class=c-item__sub-heading>CommonJS (Webpack/Browserify)</h5> <div class=c-item__code-wrapper v-html=snippets.installationCommonjs></div> <div class=c-item__description> <p>Alternatively you can add it to your components options.</p> </div> <div class=c-item__code-wrapper v-html=snippets.installationCommonjsAlternative></div> <h4 class=c-item__heading>Direct include (Browser)</h4> <div class=c-item__description> <p>Include it directly with a <code>&lt;script&gt;</code> tag. In this case, you don\'t need to write <code>Vue.use(FocusTrap)</code>, this will be done automatically for you.</p> </div> <div class=c-item__code-wrapper v-html=snippets.installationInclude></div> </div> </section> '},function(s,e){s.exports=' <main class=c-main role=main> <section class=c-main__section> <h2 class="c-main__heading u-gutter">Getting started</h2> <router-view></router-view> </section> <app-footer></app-footer> </main> '},function(s,e){s.exports=' <section class=c-main__sub-section> <h3 class="c-main__sub-heading u-gutter">Usage</h3> <div class="c-item u-gutter"> <div class=c-item__description> <p>Default behavior: When this FocusTrap mounts (ready hook), the first element in its tab order receives focus.</p> </div> <h5 class=c-item__sub-heading>Code:</h5> <div class=c-item__code-wrapper v-html=snippets.basic></div> <h5 class=c-item__sub-heading>Result:</h5> <div class=c-play-around> <button @click=mountTrap1>activate trap</button> <wv-focus-trap v-if=isTrap1Visible class=box :active=isTrap1Active> <p>Here is a focus trap <a href=#!>with</a> <a href=#!>some</a> <a href=#!>focusable</a> parts.</p> <button @click=toggleTrap1>toggle trap</button> </wv-focus-trap> </div> </div> </section> '},function(s,e){s.exports=' <footer class="c-footer u-gutter" role=contentinfo> <a href=https://github.com/wovue/component-template/tree/master target=_blank rel="noopener noreferrer">Wovue component template</a> <a href=https://github.com/SassDoc/sassdoc-theme-default target=_blank rel="noopener noreferrer">SassDoc Default Theme</a> </footer> '},function(s,e){s.exports=' <table> <thead> <tr> <th v-for="column in columns" scope=col><span class=o-screen-reader>{{ heading }} </span>{{ column }}</th> </tr> </thead> <tbody> <tr v-for="row in data"> <td v-for="column in columns" scope=row :data-label=column>{{{ row[column] ? marked(row[column]) : empty }}}</td> </tr> </tbody> </table> '},function(s,e){s.exports=" <div> <slot></slot> </div> "},function(s,e,a){var t,n,l={};a(60),t=a(17),n=a(79),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};t=a(18),n=a(80),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};a(61),t=a(19),n=a(81),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};a(62),t=a(20),n=a(82),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};a(63),t=a(21),n=a(83),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};a(64),t=a(22),n=a(84),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};t=a(23),n=a(85),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};t=a(24),n=a(86),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};t=a(25),n=a(87),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};t=a(26),n=a(88),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};t=a(27),n=a(89),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};a(65),t=a(28),n=a(90),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};a(66),t=a(29),n=a(91),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};a(67),t=a(30),n=a(92),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})},function(s,e,a){var t,n,l={};t=a(31),n=a(93),s.exports=t||{},s.exports.__esModule&&(s.exports=s.exports.default);var o="function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports;n&&(o.template=n),o.computed||(o.computed={}),Object.keys(l).forEach(function(s){var e=l[s];o.computed[s]=function(){return e}})}]);
//# sourceMappingURL=app.js.map